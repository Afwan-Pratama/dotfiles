@use "sass:color";
@use "sass:math";
@use "../variables.scss" as *;

$shadow-h: nth($bar-button-shadow-offset, 1);
$shadow-v: nth($bar-button-shadow-offset, 2);

.bar-container {
  background-color: color.adjust($bar-bg-color, $alpha: calc($bar-opacity - 1));
  margin: $bar-margin;
  border-radius: $bar-border-radius;
  padding: $bar-padding;
  box-shadow:
    0 0 0 $bar-border-width $bar-border-color,
    $bar-shadow-offset $bar-shadow-blur $bar-shadow-spread color.adjust($bar-shadow-color, $alpha: calc($bar-shadow-opacity - 1));

  separator {
    min-width: if($bar-separator, 2px, 0);
  }

  .workspace-container {
    background-color: transparent;
    box-shadow:
      0 0 0 $bar-button-border-width $bar-button-border-color,
      $bar-button-shadow-offset $bar-button-shadow-blur $bar-button-shadow-spread color.adjust($bar-button-shadow-color,
        $alpha: calc($bar-button-shadow-opacity - 1));

    color: $bar-button-fg-color;
    border-radius: calc(nth($bar-button-border-radius, 1) / 2);
    padding: $bar-button-padding;
    margin-right: if($shadow-h > 0, $shadow-h, 0);
    margin-left: if($shadow-h <=0, $shadow-h, 0);
    margin-bottom: if($shadow-v > 0, $shadow-v, 0);
    margin-top: if($shadow-v <=0, $shadow-v, 0);

    .workspace-button {
      background-color: color.adjust($bar-button-fg-color, $alpha: -0.55);
      min-height: 0.65em;
      min-width: 0.65rem;
      border-radius: calc(nth($bar-button-border-radius, 1) * 1.5);

      transition: min-width 0.25s ease-out;

      &:hover {
        background-color: $bar-button-fg-color;

        &.occupied {
          background-color: $bar-button-fg-color;
        }
      }

      &.active {
        min-height: 2.5rem;
        min-width: 0.95rem;
        background-color: $accent;
      }

      &.occupied {
        box-shadow: unset;
        background-color: $bar-button-fg-color;

        &.active {
          background-color: $accent;
        }
      }
    }
  }
}
